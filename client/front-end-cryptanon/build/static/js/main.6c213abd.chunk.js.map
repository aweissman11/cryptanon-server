{"version":3,"sources":["Nav.js","UrlInput.js","Response.js","helper.js","UserEndpoints.js","EndpointResponses.js","App.js","serviceWorker.js","index.js"],"names":["Nav","_ref","updateSelection","react_default","a","createElement","className","onClick","UrlInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","urlAddress","target","value","handleSubmit","preventDefault","props","updateUrl","state","onSubmit","placeholder","name","onChange","Component","Response","currentSelection","response","error","length","JSON","stringify","exampleUrl","UserEndpoints","username","password","user_id","asset_id","EndpointResponses","id","message","App","post","responseToPost","currentUrl","_callee","input","regenerator_default","wrap","_context","prev","next","getExample","stop","_callee2","body","_context2","fetch","sent","json","console","log","status","Error","t0","src_Nav","src_UrlInput","src_Response","src_UserEndpoints","src_EndpointResponses","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRAyBeA,SAvBH,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,gBACZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,UACVC,QAAS,kBAAML,EAAgB,KAFjC,2BAIAC,EAAAC,EAAAC,cAAA,UACEC,UAAU,UACVC,QAAS,kBAAML,EAAgB,KAFjC,yCAIAC,EAAAC,EAAAC,cAAA,UACEC,UAAU,UACVC,QAAS,kBAAML,EAAgB,KAFjC,+BAIAC,EAAAC,EAAAC,cAAA,UACEC,UAAU,UACVC,QAAS,kBAAML,EAAgB,KAFjC,iCCsBSM,cApCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAOFI,aAAe,SAACC,GACdR,EAAKS,SAAS,CACZC,WAAYF,EAAEG,OAAOC,SAVXZ,EAcda,aAAe,SAACL,GACdA,EAAEM,iBACFd,EAAKe,MAAMC,UAAUhB,EAAKiB,MAAMP,aAbhCV,EAAKiB,MAAQ,CACXP,WAAY,IAJFV,wEAoBZ,OACEN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYqB,SAAUf,KAAKU,cACzCnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,yCACAH,EAAAC,EAAAC,cAAA,SACEuB,YAAY,YACZtB,UAAU,QACVuB,KAAK,aACLR,MAAOT,KAAKc,MAAMP,WAClBW,SAAUlB,KAAKI,eAEjBb,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAlB,eA/BeyB,aCgCRC,EAhCE,SAAA/B,GAA2C,IAAxCgC,EAAwChC,EAAxCgC,iBAAkBC,EAAsBjC,EAAtBiC,SACpC,OAAc,IAD4CjC,EAAZkC,MAG1ChC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAW2B,GACxB9B,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAb,kBAGyB,IAApB4B,EAASE,OAEhBjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAW2B,GACxB9B,EAAAC,EAAAC,cAAA,uBAKFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAW2B,GACxB9B,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZ+B,KAAKC,UAAUJ,EAAS,GAAI,KAAM,MCpB9BK,EAPI,CACnB,sDACA,qEACA,sFACA,kEC6CeC,EA/CO,WACpB,OAGErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAEG,SAAU,cAAeC,SAAU,cAAgB,KAAM,KAGlFvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,2EACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAEG,SAAU,mBAAqB,KAAM,KAG9DtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,4EACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAEI,SAAU,gBAAkB,KAAM,KAG3DvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAEI,SAAU,gBAAkB,KAAM,KAG3DvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAEK,QAAS,EAAGC,SAAU,GAAK,KAAM,KAG1DzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,qFAGFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,qECgBOwC,EAxDW,WACxB,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAEQ,GAAM,EAAGL,SAAY,WAAc,KAAM,KAGlEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAEQ,GAAM,GAAM,KAAM,KAG3C3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAEQ,GAAM,GAAM,KAAM,KAG3C3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAES,QAAW,kBAAqB,KAAM,KAG/D5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAEK,QAAS,EAAGC,SAAU,GAAK,KAAM,KAG1DzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAES,QAAS,sBAAwB,KAAM,KAGhE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WAAMgC,KAAKC,UAAU,CAAE,CAAEK,QAAS,EAAGC,SAAU,IAAM,KAAM,OCuBpDI,6MAhEbtB,MAAQ,CACNQ,SAAU,GACVe,KAAM,GACNC,eAAgB,GAChBjB,iBAAkB,GAClBkB,WAAY,GACZhB,OAAO,KAGTjC,gBAAkB,SAAA4C,GAChBrC,EAAKS,SAAS,CACZe,iBAAkBM,EAAWO,QAIjCrB,gDAAY,SAAA2B,EAAMC,GAAN,OAAAC,EAAAlD,EAAAmD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACJjD,EAAKS,SAAS,CAClBiC,WAAYE,EACZlB,OAAO,IAHC,OAKV1B,EAAKkD,aALK,wBAAAH,EAAAI,SAAAR,EAAAxC,iEAQZ+C,gCAAa,SAAAE,IAAA,IAAA3B,EAAA4B,EAAA,OAAAR,EAAAlD,EAAAmD,KAAA,SAAAQ,GAAA,cAAAA,EAAAN,KAAAM,EAAAL,MAAA,cAAAK,EAAAN,KAAA,EAAAM,EAAAL,KAAA,EAEcM,MAAMvD,EAAKiB,MAAMyB,YAF/B,cAEHjB,EAFG6B,EAAAE,KAAAF,EAAAL,KAAA,EAGUxB,EAASgC,OAHnB,UAGHJ,EAHGC,EAAAE,KAITE,QAAQC,IAAIN,GAEY,MAApB5B,EAASmC,OANJ,CAAAN,EAAAL,KAAA,gBAAAK,EAAAL,KAAA,GAODjD,EAAKS,SAAS,CAClBiB,OAAO,IARF,cAUDmC,MAAMR,EAAKf,SAVV,eAAAgB,EAAAL,KAAA,GAYDjD,EAAKS,SAAS,CAClBgB,SAAU4B,IAbL,QAAAC,EAAAL,KAAA,iBAAAK,EAAAN,KAAA,GAAAM,EAAAQ,GAAAR,EAAA,SAiBTI,QAAQC,IAARL,EAAAQ,IAjBS,yBAAAR,EAAAH,SAAAC,EAAAjD,KAAA,qFAsBX,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,aACAH,EAAAC,EAAAC,cAACmE,EAAD,CAAKtE,gBAAiBU,KAAKV,kBAC3BC,EAAAC,EAAAC,cAACoE,EAAD,CAAUhD,UAAWb,KAAKa,aAE5BtB,EAAAC,EAAAC,cAACqE,EAAD,CACEzC,iBAAkBrB,KAAKc,MAAMO,iBAC7BC,SAAUtB,KAAKc,MAAMQ,SACrBC,MAAOvB,KAAKc,MAAMS,QAEpBhC,EAAAC,EAAAC,cAACsE,EAAD,MACAxE,EAAAC,EAAAC,cAACuE,EAAD,cA3DU7C,aCGE8C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6c213abd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Nav = ({updateSelection}) => {\n  return(\n    <div className=\"nav-bar\">\n      <button \n        className=\"nav-btn\"\n        onClick={() => updateSelection(0)}\n        >Top 50 Cryptocurrencies</button>\n      <button \n        className=\"nav-btn\"\n        onClick={() => updateSelection(1)}\n        >Historical Pricing for Cryptocurrency</button>\n      <button \n        className=\"nav-btn\"\n        onClick={() => updateSelection(2)}\n        >Range of Historical Pricing</button>\n      <button \n        className=\"nav-btn\"\n        onClick={() => updateSelection(3)}\n        >Top Headlines for Currency</button>\n    </div>\n  );\n}\n\nexport default Nav;","import React, { Component } from 'react';\n\nclass UrlInput extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      urlAddress: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      urlAddress: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.updateUrl(this.state.urlAddress)\n  }\n\n  render() {\n    return(\n      <form className=\"url-input\" onSubmit={this.handleSubmit} >\n        <p className='host' >http://cryptanon-server.herokuapp.com</p>\n        <input \n          placeholder=\"Enter URL\" \n          className=\"input\"\n          name='urlAddress'\n          value={this.state.urlAddress}\n          onChange={this.handleChange}\n        />\n        <button className=\"get-btn\">GET</button>\n      </form>\n    );\n  }\n}\n\nexport default UrlInput;","import React from \"react\";\n\nconst Response = ({ currentSelection, response, error }) => {\n  if (error === true) {\n    return (\n      <div className=\"get-response\">\n        <h4>Example</h4>\n        <p className=\"example\">{currentSelection}</p>\n        <h4>Response</h4>\n        <p className=\"get-response-example\">Incorrect URL</p>\n      </div>\n    );\n  } else if (response.length === 0) {\n    return (\n      <div className=\"get-response\">\n        <h4>Example</h4>\n        <p className=\"example\">{currentSelection}</p>\n        <h4>Response</h4>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"get-response\">\n        <h4>Example</h4>\n        <p className=\"example\">{currentSelection}</p>\n        <h4>Response</h4>\n        <pre className=\"get-response-example\">\n          {JSON.stringify(response[0], null, 2)}\n        </pre>\n      </div>\n    );\n  }\n};\n\nexport default Response;\n","const exampleUrl = [\n'http://cryptanon-server.herokuapp.com/api/v1/assets',\n'http://cryptanon-server.herokuapp.com/api/v1/assets/4/asset_prices',\n'http://cryptanon-server.herokuapp.com/api/v1/assets/3/asset_prices?uniDate=15126912',\n'http://cryptanon-server.herokuapp.com/api/v1/assets/3/articles',\n]\n\nexport default exampleUrl","import React from 'react';\n\nconst UserEndpoints = () => {\n  return(\n\n\n    <div className=\"endpoint-responses\">\n      <div className=\"endpoint\">\n        <h5>To create a user make a POST REQUEST </h5>\n        <h5>Include a body: </h5>\n        <pre>{JSON.stringify({ username: 'John Denver', password: 'fnioew8332' }, null, 2) }</pre>\n      </div>\n\n      <div className=\"endpoint\">\n        <h5>To change a password for a specific user make a PATCH REQUEST</h5>\n        <h5>Include a body: </h5>\n        <pre>{JSON.stringify({ username: 'John Doe Denver' }, null, 2) }</pre>\n      </div>\n\n      <div className=\"endpoint\">\n        <h5>To change a username for a specific user make a PATCH REQUEST </h5>\n        <h5>Include a body: </h5>\n        <pre>{JSON.stringify({ password: \"fjljjfs12312\" }, null, 2) }</pre>\n      </div>\n\n      <div className=\"endpoint\">\n        <h5>To delete a specific user make a DELETE REQUEST </h5>\n        <h5>Include a body: </h5>\n        <pre>{JSON.stringify({ password: \"fjljjfs12312\" }, null, 2) }</pre>\n      </div>\n\n      <div className=\"endpoint\">\n        <h5>To add a favorite cryptocurrency to a user make a POST REQUEST </h5>\n        <h5>Include a body: </h5>\n        <pre>{JSON.stringify({ user_id: 1, asset_id: 1 }, null, 2) }</pre>\n      </div>\n\n      <div className=\"endpoint\">\n        <h5>To delete a favorite cryptocurrency for a user make a DELETE REQUEST  </h5>\n      </div>\n\n      <div className=\"endpoint\">\n        <h5>To get ALL favorites for a user make a GET REQUEST  </h5>\n      </div>\n    </div>\n\n  );\n}\n\nexport default UserEndpoints;","import React from 'react';\n\nconst EndpointResponses = () => {\n  return(\n    <div className=\"user-endpoints\">\n      <div className=\"response\">\n        <h4>Example</h4>\n        <p>http://cryptanon-server.herokuapp.com/api/v1/users</p>\n        <h4>Response</h4>\n        <pre>{JSON.stringify({ 'id': 1, 'username': 'Bitcoin', }, null, 2) }</pre>\n      </div>\n\n      <div className=\"response\">\n        <h4>Example</h4>\n        <p>http://cryptanon-server.herokuapp.com/api/v1/users/username/1</p>\n        <h4>Response</h4>\n        <pre>{JSON.stringify({ \"id\": 1, }, null, 2) }</pre>\n      </div>\n\n      <div className=\"response\">\n        <h4>Example</h4>\n        <p>http://cryptanon-server.herokuapp.com/api/v1/users/username/1</p>\n        <h4>Response</h4>\n        <pre>{JSON.stringify({ \"id\": 1, }, null, 2) }</pre>\n      </div>\n\n      <div className=\"response\">\n        <h4>Example</h4>\n        <p>http://cryptanon-server.herokuapp.com/api/v1/users/username/1</p>\n        <h4>Response</h4>\n        <pre>{JSON.stringify({ \"message\": \"user 1 deleted\", }, null, 2) }</pre>\n      </div>\n\n      <div className=\"response\">\n        <h4>Example</h4>\n        <p>http://cryptanon-server.herokuapp.com/api/v1/favorites</p>\n        <h4>Response</h4>\n        <pre>{JSON.stringify({ user_id: 1, asset_id: 1 }, null, 2) }</pre>\n      </div>\n\n      <div className=\"response\">\n        <h4>Example</h4>\n        <p>http://cryptanon-server.herokuapp.com/api/v1/favorites/1</p>\n        <h4>Response</h4>\n        <pre>{JSON.stringify({ message: \"favorite 1 deleted\" }, null, 2) }</pre>\n      </div>\n\n      <div className=\"response\">\n        <h4>Example</h4>\n        <p>http://cryptanon-server.herokuapp.com/api/v1/favorites/1</p>\n        <h4>Response</h4>\n        <pre>{JSON.stringify([ { user_id: 1, asset_id: 1 }], null, 2) }</pre>\n      </div>\n    </div>\n\n  );\n}\n\nexport default EndpointResponses;\n\n\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./Nav\";\nimport UrlInput from \"./UrlInput\";\nimport Response from \"./Response\";\nimport exampleUrl from \"./helper\";\nimport UserEndpoints from \"./UserEndpoints\";\nimport EndpointResponses from \"./EndpointResponses\";\n\nclass App extends Component {\n  state = {\n    response: [],\n    post: \"\",\n    responseToPost: \"\",\n    currentSelection: \"\",\n    currentUrl: \"\",\n    error: false\n  };\n\n  updateSelection = id => {\n    this.setState({\n      currentSelection: exampleUrl[id]\n    });\n  };\n\n  updateUrl = async input => {\n    await this.setState({\n      currentUrl: input,\n      error: false\n    });\n    this.getExample();\n  };\n\n  getExample = async () => {\n    try {\n      const response = await fetch(this.state.currentUrl);\n      const body = await response.json();\n      console.log(body);\n\n      if (response.status !== 200) {\n        await this.setState({\n          error: true\n        });\n        throw Error(body.message);\n      } else {\n        await this.setState({\n          response: body\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"title\">Cryptanon</h1>\n          <Nav updateSelection={this.updateSelection} />\n          <UrlInput updateUrl={this.updateUrl} />\n        </header>\n        <Response\n          currentSelection={this.state.currentSelection}\n          response={this.state.response}\n          error={this.state.error}\n        />\n        <UserEndpoints />\n        <EndpointResponses />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}